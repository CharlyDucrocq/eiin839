//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//
//     Les changements apportés à ce fichier peuvent provoquer un comportement incorrect et seront perdus si
//     le code est regénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference2
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Position", Namespace="http://schemas.datacontract.org/2004/07/MyBicycleRedirectionService")]
    public partial class Position : object
    {
        
        private double LatitudeField;
        
        private double LongitudeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude
        {
            get
            {
                return this.LatitudeField;
            }
            set
            {
                this.LatitudeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude
        {
            get
            {
                return this.LongitudeField;
            }
            set
            {
                this.LongitudeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Edge", Namespace="http://schemas.datacontract.org/2004/07/MyBicycleRedirectionService")]
    public partial class Edge : object
    {
        
        private double DurationField;
        
        private ServiceReference2.Position EndField;
        
        private double LentghField;
        
        private ServiceReference2.Position StartField;
        
        private ServiceReference2.MoveType StatusField;
        
        private double[][] coordinatesField;
        
        private string[] instructionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Duration
        {
            get
            {
                return this.DurationField;
            }
            set
            {
                this.DurationField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference2.Position End
        {
            get
            {
                return this.EndField;
            }
            set
            {
                this.EndField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Lentgh
        {
            get
            {
                return this.LentghField;
            }
            set
            {
                this.LentghField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference2.Position Start
        {
            get
            {
                return this.StartField;
            }
            set
            {
                this.StartField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReference2.MoveType Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[][] coordinates
        {
            get
            {
                return this.coordinatesField;
            }
            set
            {
                this.coordinatesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] instructions
        {
            get
            {
                return this.instructionsField;
            }
            set
            {
                this.instructionsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoveType", Namespace="http://schemas.datacontract.org/2004/07/MyBicycleRedirectionService")]
    public enum MoveType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bike = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IRedirectionService")]
    public interface IRedirectionService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedirectionService/GetWayToGo", ReplyAction="http://tempuri.org/IRedirectionService/GetWayToGoResponse")]
        System.Threading.Tasks.Task<ServiceReference2.Edge[]> GetWayToGoAsync(ServiceReference2.Position start, ServiceReference2.Position end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRedirectionService/GetWayToGoSimple", ReplyAction="http://tempuri.org/IRedirectionService/GetWayToGoSimpleResponse")]
        System.Threading.Tasks.Task<ServiceReference2.Edge[]> GetWayToGoSimpleAsync(double startLng, double startLat, double endLng, double endLat);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IRedirectionServiceChannel : ServiceReference2.IRedirectionService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class RedirectionServiceClient : System.ServiceModel.ClientBase<ServiceReference2.IRedirectionService>, ServiceReference2.IRedirectionService
    {
        
        /// <summary>
        /// Implémentez cette méthode partielle pour configurer le point de terminaison de service.
        /// </summary>
        /// <param name="serviceEndpoint">Point de terminaison à configurer</param>
        /// <param name="clientCredentials">Informations d'identification du client</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RedirectionServiceClient() : 
                base(RedirectionServiceClient.GetDefaultBinding(), RedirectionServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IRedirectionService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RedirectionServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(RedirectionServiceClient.GetBindingForEndpoint(endpointConfiguration), RedirectionServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RedirectionServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RedirectionServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RedirectionServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RedirectionServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RedirectionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.Edge[]> GetWayToGoAsync(ServiceReference2.Position start, ServiceReference2.Position end)
        {
            return base.Channel.GetWayToGoAsync(start, end);
        }
        
        public System.Threading.Tasks.Task<ServiceReference2.Edge[]> GetWayToGoSimpleAsync(double startLng, double startLat, double endLng, double endLat)
        {
            return base.Channel.GetWayToGoSimpleAsync(startLng, startLat, endLng, endLat);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRedirectionService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRedirectionService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/MyBicycleRedirectionService/Redirecti" +
                        "onService/");
            }
            throw new System.InvalidOperationException(string.Format("Le point de terminaison nommé \'{0}\' est introuvable.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return RedirectionServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IRedirectionService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return RedirectionServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IRedirectionService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IRedirectionService,
        }
    }
}
